<!doctype html>
<html>

<head>
  <meta charset="utf-8">
  <title>demo</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <script src="https://code.createjs.com/easeljs-0.8.2.min.js"></script>
  <style>
    body {
      margin: 0;
      padding: 0;
    }

    #canvas {
      width: 100%;
      height: 100%;
    }

    .btn {
      position: absolute;
      top: 0;
      left: 0;
    }

    .btn span {
      background: #fff;
      border: 1px solid #ccc;
      padding: 10px;
    }
  </style>
</head>

<body>
  <canvas id="canvas"></canvas>
  <div class="btn">
    <span id='big'>放大</span>
    <span id='small'>缩小</span>
  </div>
</body>
<script>
  (function () {
    var oldX; var oldY;
    var isClick = true
    var winWidth = window.innerWidth;
    var winHeight = window.innerHeight;
    var clickedContain = false;
    let saveScale;
    var config = {
      imgScale: 1,
      scalStep: 2,
      minScale: 0.1,
      maxScale: 10,
      areaOption: [
        {
          name: "1",
          startPoint: [100, 100],
          polygon: [[150, 50], [300, 300]],
          fn: function (e) {
            console.log(e);
          }
        },
        {
          name: "2",
          startPoint: [30, 30],
          polygon: [[40, 60], [100, 60], [30, 90]],
          fn: function (e) {

            location.href = '/'
          }
        }
      ]
    }

    document.getElementById('canvas').height = winHeight;
    var stage = new createjs.Stage("canvas");
    //创建容器
    var container = new createjs.Container();
    //添加容器到stage
    stage.addChild(container);

    var bigBtn = document.getElementById('big');
    var smallBtn = document.getElementById('small');

    createjs.Touch.enable(stage)
    createjs.Ticker.setFPS(30);
    createjs.Ticker.addEventListener("tick", stage);
    const drawImg = (type) => {
      let x, y;
      if (!!type && type == 'small') {
        x = container.x / config.scalStep;
        y = container.y / config.scalStep
      } else {
        x = container.x * config.scalStep;
        y = container.y * config.scalStep
      }

      container.x = x
      container.y = y
      container.scaleX = config.imgScale;
      container.scaleY = config.imgScale;
      drawRc()
      stage.update();


    }

    const drawRc = () => {
      config.areaOption.forEach((val, i) => {
        var cap = new createjs.Shape();
        cap.graphics.beginFill("red");
        cap.graphics.moveTo(...val.startPoint);
        val.polygon.forEach(item => {
          cap.graphics.lineTo(...item);
        })
        cap.graphics.lineTo(...val.startPoint);
        cap.graphics.endFill();
        cap.on('click', function (e) {
          if (isClick) {
            val.fn(e)
          }
        });
        container.addChild(cap);
      })

      stage.update();
    }
    var image = new createjs.Bitmap("/images/chooseBg.jpg");
    container.on("mousedown", function (e) {
      isClick = true;
      oldX = e.stageX;
      oldY = e.stageY;
    });
    container.on("pressmove", function (e) {
      isClick = false;

      if ((image.image.width * config.imgScale - 300) < Math.abs(container.x)) {
        container.x = -(image.image.width * config.imgScale - 300)
      }
      if ((image.image.height * config.imgScale - 500) < Math.abs(container.y)) {
        container.y = -(image.image.height * config.imgScale - 500)
      }

      if (container.x > 0) {
        container.x = 0
      }
      if (container.y > 0) {
        container.y = 0
      }
      container.x += e.stageX - oldX;
      container.y += e.stageY - oldY;

      oldX = e.stageX;
      oldY = e.stageY;
    });


    container.addChild(image);

    bigBtn.addEventListener('click', () => {
      if (config.imgScale < config.maxScale) {
        //saveScale = config.imgScale;
        config.imgScale = config.imgScale * config.scalStep;
        drawImg("big")
      } else {
        alert('不能再放大了')
      }
    })
    smallBtn.addEventListener('click', () => {
      if (config.imgScale > config.minScale) {
        //saveScale = config.imgScale;
        config.imgScale = config.imgScale / config.scalStep;
        drawImg("small")
      } else {
        alert('不能再缩小了')
      }

    })
    drawImg()
  })()
</script>

</html>